(function(){
'use strict';
// Source: app/modules/bill/bill-module.annotated.js
angular
	.module('app.modules.bill', ['ngRoute'])
	.config(['$routeProvider', 'billServiceProvider', function($routeProvider, billServiceProvider) {
		$routeProvider.when('/bill', {
			templateUrl: 'app/modules/bill/bill.html',
			controller: 'BillController as billCtrl'
		});

		//billServiceProvider.setUrl('app/modules/bill/data/bill.json');
		billServiceProvider.setUrl('https://still-scrubland-9880.herokuapp.com/bill.json');
	}]);;
// Source: app/modules/home/home-module.annotated.js
angular
	.module('app.modules.home', ['ngRoute', 'ng-showdown'])
	.config(['$routeProvider', function($routeProvider) {
		$routeProvider.when('/home', {
			templateUrl: 'app/modules/home/home.html',
			controller: 'HomeController as vm'
		});
	}]);;
// Source: app/modules/hotels/hotels-module.annotated.js
angular
	.module('app.modules.hotels', ['ngRoute'])
	.config(['$routeProvider', function($routeProvider) {
		$routeProvider.when('/hotels', {
			templateUrl: 'app/modules/hotels/hotels.html',
			controller: 'HotelsController'
		});
	}]);;
// Source: app/app.annotated.js
angular.module('app', [
	'ngRoute',
	'ui.bootstrap',
	'app.modules.home',
	'app.modules.hotels',
	'app.modules.bill'
]).config(['$routeProvider', function ($routeProvider) {
	$routeProvider
		.otherwise({
			redirectTo: '/home'
		});
}]);;
// Source: app/modules/bill/internal/bill-controller.annotated.js
angular
	.module('app.modules.bill')
	.controller('BillController', BillController);

function BillController(billService) {
	var vm = this;
	init();

	function init() {
		vm.selection = 'subscriptions';

		billService
			.getBill()
			.then(parseBill, function (error) {
				vm.errorMessage = "Bill not available. Please contact SKY for details."
			});
	}

	function parseBill(bill) {
		vm.statement = bill.statement;
		vm.total = bill.total;
		vm.package = bill.package;
		vm.callCharges = bill.callCharges;
		vm.skyStore = bill.skyStore;
	}
}
BillController.$inject = ['billService'];;
// Source: app/modules/bill/internal/bill-details-directive.annotated.js
angular
	.module('app.modules.bill')
	//.module('app.modules.bill.billDetails', [])
	.directive('billDetails', function() {
		return {
			restrict: 'E',
			templateUrl: 'app/modules/bill/internal/bill-details-directive.tpl.html',
			scope: {
				labels: '=',
				dataset: '=',
				fields: '=',
				total: '='
			},
			replace: false
		};
	});;
// Source: app/modules/bill/internal/bill-service-provider.annotated.js
angular
	.module('app.modules.bill')
	.provider('billService', BillServiceProvider);

function BillServiceProvider() {
	var dataUrl;

	this.setUrl = function (url) {
		dataUrl = url;
	};

	this.$get = ['$http', '$q', function billServiceFactory ($http, $q) {
		return {
			getBill: getBill,
			url: dataUrl
		};

		function getBill () {
			var deferred = $q.defer();
			$http
				.get(dataUrl)
				.then(function (response) {
					deferred.resolve(response.data);
				}, function (error) {
					deferred.resolve('Something went wrong. Try again later!');
				});
			return deferred.promise;
		}
	}]
};
// Source: app/modules/home/home-controller.annotated.js
angular
	.module('app.modules.home')
	.controller('HomeController', HomeController);

function HomeController($http) {
	var vm = this;
	vm.readmeRawURL = 'https://raw.githubusercontent.com/indieforger/fs-angular-assignments/master/README.md';
	vm.readmeURL = 'https://github.com/indieforger/fs-angular-assignments/blob/master/README.md';
	vm.parserURL = 'https://github.com/showdownjs/ng-showdown';


	$http
		.get(vm.readmeRawURL)
		.then(handleResponse, handleError);

	function handleResponse(response) {
		vm.content = response.data;
	}

	function handleError(error) {
		vm.content = 'Something went wrong. Try again later!'
	}
}
HomeController.$inject = ['$http'];;
// Source: app/modules/hotels/hotel-info-directive.annotated.js
angular
	.module('app.modules.hotels')
	.directive('hotelInfo', function() {
		return {
			restrict: 'E',
			templateUrl: 'app/modules/hotels/hotel-info.tpl.html'
		};
	});;
// Source: app/modules/hotels/hotels-controller.annotated.js
angular
	.module("app.modules.hotels")
	.controller("HotelsController", HotelsController);

function HotelsController($http, $filter, $timeout) {
	var vm = this;

	$http({
		method: 'GET',
		url: '/app/modules/hotels/data/hotels.json'
	}).then(function successCallback(response) {
		vm.hotels = response.data.Establishments;
		vm.hotels.forEach(function(hotel) {
			var i, stars = '';
			for (i = 0; i < hotel.Stars; i++) {
				stars += '*';
			}
			hotel.StarsString = stars;
		});
		vm.hotelsData = vm.hotels;
		vm.loading = false;
	}, function errorCallback(response) {
		// called asynchronously if an error occurs
		// or server returns response with an error status.
	});

	vm.resetFilter = function () {
		vm.filter = {};
	};

	var timer;
	vm.updateFilter = function () {
		$timeout.cancel(timer);
		timer = $timeout(updateHotels, 500);
	};

	function updateHotels() {
		vm.hotels = $filter('filter')(vm.hotelsData, vm.filter);
	}

	vm.loading = true;
	vm.predicate = 'Stars';
	vm.reverse = true;
	vm.filter = '';
	vm.filterType ='$';
	vm.resultLimit = '20';
	vm.filterTypes = [
		{type: '$', name: 'Any'},
		{type: 'Name', name: 'Name'},
		{type: 'Stars', name: 'Stars'},
		{type: 'UserRating', name: 'Average Rating'},
		{type: 'MinCost', name: 'Minimum Cost'}
	];
	vm.resultLimits = [10, 20, 50, 100, 200];

	vm.order = function(predicate) {
		vm.reverse = (vm.predicate === predicate) ? !vm.reverse : false;
		vm.predicate = predicate;
	};
}
HotelsController.$inject = ['$http', '$filter', '$timeout'];
})();