{"version":3,"sources":["app.min.js"],"names":["BillController","billService","init","vm","selection","getBill","then","parseBill","error","errorMessage","bill","statement","total","callCharges","skyStore","this","BillServiceProvider","dataUrl","setUrl","url","$get","$http","$q","deferred","defer","get","response","resolve","data","promise","HomeController","handleResponse","content","handleError","readmeRawURL","readmeURL","parserURL","HotelsController","$filter","$timeout","updateHotels","hotels","hotelsData","filter","method","Establishments","forEach","hotel","i","stars","Stars","StarsString","loading","resetFilter","timer","updateFilter","cancel","predicate","reverse","filterType","resultLimit","filterTypes","type","name","resultLimits","order","angular","module","config","$routeProvider","billServiceProvider","when","templateUrl","controller","otherwise","redirectTo","$inject","directive","restrict","scope","labels","dataset","fields","replace","provider"],"mappings":"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","file":"app.min.js","sourcesContent":["(function(){\n'use strict';\n// Source: app/modules/bill/bill-module.annotated.js\nangular\n\t.module('app.modules.bill', ['ngRoute'])\n\t.config(['$routeProvider', 'billServiceProvider', function($routeProvider, billServiceProvider) {\n\t\t$routeProvider.when('/bill', {\n\t\t\ttemplateUrl: 'app/modules/bill/bill.html',\n\t\t\tcontroller: 'BillController as billCtrl'\n\t\t});\n\n\t\t//billServiceProvider.setUrl('app/modules/bill/data/bill.json');\n\t\tbillServiceProvider.setUrl('https://still-scrubland-9880.herokuapp.com/bill.json');\n\t}]);;\n// Source: app/modules/home/home-module.annotated.js\nangular\n\t.module('app.modules.home', ['ngRoute', 'ng-showdown'])\n\t.config(['$routeProvider', function($routeProvider) {\n\t\t$routeProvider.when('/home', {\n\t\t\ttemplateUrl: 'app/modules/home/home.html',\n\t\t\tcontroller: 'HomeController as vm'\n\t\t});\n\t}]);;\n// Source: app/modules/hotels/hotels-module.annotated.js\nangular\n\t.module('app.modules.hotels', ['ngRoute'])\n\t.config(['$routeProvider', function($routeProvider) {\n\t\t$routeProvider.when('/hotels', {\n\t\t\ttemplateUrl: 'app/modules/hotels/hotels.html',\n\t\t\tcontroller: 'HotelsController'\n\t\t});\n\t}]);;\n// Source: app/app.annotated.js\nangular.module('app', [\n\t'ngRoute',\n\t'ui.bootstrap',\n\t'app.modules.home',\n\t'app.modules.hotels',\n\t'app.modules.bill'\n]).config(['$routeProvider', function ($routeProvider) {\n\t$routeProvider\n\t\t.otherwise({\n\t\t\tredirectTo: '/home'\n\t\t});\n}]);;\n// Source: app/modules/bill/internal/bill-controller.annotated.js\nangular\n\t.module('app.modules.bill')\n\t.controller('BillController', BillController);\n\nfunction BillController(billService) {\n\tvar vm = this;\n\tinit();\n\n\tfunction init() {\n\t\tvm.selection = 'subscriptions';\n\n\t\tbillService\n\t\t\t.getBill()\n\t\t\t.then(parseBill, function (error) {\n\t\t\t\tvm.errorMessage = \"Bill not available. Please contact SKY for details.\"\n\t\t\t});\n\t}\n\n\tfunction parseBill(bill) {\n\t\tvm.statement = bill.statement;\n\t\tvm.total = bill.total;\n\t\tvm.package = bill.package;\n\t\tvm.callCharges = bill.callCharges;\n\t\tvm.skyStore = bill.skyStore;\n\t}\n}\nBillController.$inject = ['billService'];;\n// Source: app/modules/bill/internal/bill-details-directive.annotated.js\nangular\n\t.module('app.modules.bill')\n\t//.module('app.modules.bill.billDetails', [])\n\t.directive('billDetails', function() {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\ttemplateUrl: 'app/modules/bill/internal/bill-details-directive.tpl.html',\n\t\t\tscope: {\n\t\t\t\tlabels: '=',\n\t\t\t\tdataset: '=',\n\t\t\t\tfields: '=',\n\t\t\t\ttotal: '='\n\t\t\t},\n\t\t\treplace: false\n\t\t};\n\t});;\n// Source: app/modules/bill/internal/bill-service-provider.annotated.js\nangular\n\t.module('app.modules.bill')\n\t.provider('billService', BillServiceProvider);\n\nfunction BillServiceProvider() {\n\tvar dataUrl;\n\n\tthis.setUrl = function (url) {\n\t\tdataUrl = url;\n\t};\n\n\tthis.$get = ['$http', '$q', function billServiceFactory ($http, $q) {\n\t\treturn {\n\t\t\tgetBill: getBill,\n\t\t\turl: dataUrl\n\t\t};\n\n\t\tfunction getBill () {\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http\n\t\t\t\t.get(dataUrl)\n\t\t\t\t.then(function (response) {\n\t\t\t\t\tdeferred.resolve(response.data);\n\t\t\t\t}, function (error) {\n\t\t\t\t\tdeferred.resolve('Something went wrong. Try again later!');\n\t\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t}\n\t}]\n};\n// Source: app/modules/home/home-controller.annotated.js\nangular\n\t.module('app.modules.home')\n\t.controller('HomeController', HomeController);\n\nfunction HomeController($http) {\n\tvar vm = this;\n\tvm.readmeRawURL = 'https://raw.githubusercontent.com/indieforger/fs-angular-assignments/master/README.md';\n\tvm.readmeURL = 'https://github.com/indieforger/fs-angular-assignments/blob/master/README.md';\n\tvm.parserURL = 'https://github.com/showdownjs/ng-showdown';\n\n\n\t$http\n\t\t.get(vm.readmeRawURL)\n\t\t.then(handleResponse, handleError);\n\n\tfunction handleResponse(response) {\n\t\tvm.content = response.data;\n\t}\n\n\tfunction handleError(error) {\n\t\tvm.content = 'Something went wrong. Try again later!'\n\t}\n}\nHomeController.$inject = ['$http'];;\n// Source: app/modules/hotels/hotel-info-directive.annotated.js\nangular\n\t.module('app.modules.hotels')\n\t.directive('hotelInfo', function() {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\ttemplateUrl: 'app/modules/hotels/hotel-info.tpl.html'\n\t\t};\n\t});;\n// Source: app/modules/hotels/hotels-controller.annotated.js\nangular\n\t.module(\"app.modules.hotels\")\n\t.controller(\"HotelsController\", HotelsController);\n\nfunction HotelsController($http, $filter, $timeout) {\n\tvar vm = this;\n\n\t$http({\n\t\tmethod: 'GET',\n\t\turl: '/app/modules/hotels/data/hotels.json'\n\t}).then(function successCallback(response) {\n\t\tvm.hotels = response.data.Establishments;\n\t\tvm.hotels.forEach(function(hotel) {\n\t\t\tvar i, stars = '';\n\t\t\tfor (i = 0; i < hotel.Stars; i++) {\n\t\t\t\tstars += '*';\n\t\t\t}\n\t\t\thotel.StarsString = stars;\n\t\t});\n\t\tvm.hotelsData = vm.hotels;\n\t\tvm.loading = false;\n\t}, function errorCallback(response) {\n\t\t// called asynchronously if an error occurs\n\t\t// or server returns response with an error status.\n\t});\n\n\tvm.resetFilter = function () {\n\t\tvm.filter = {};\n\t};\n\n\tvar timer;\n\tvm.updateFilter = function () {\n\t\t$timeout.cancel(timer);\n\t\ttimer = $timeout(updateHotels, 500);\n\t};\n\n\tfunction updateHotels() {\n\t\tvm.hotels = $filter('filter')(vm.hotelsData, vm.filter);\n\t}\n\n\tvm.loading = true;\n\tvm.predicate = 'Stars';\n\tvm.reverse = true;\n\tvm.filter = '';\n\tvm.filterType ='$';\n\tvm.resultLimit = '20';\n\tvm.filterTypes = [\n\t\t{type: '$', name: 'Any'},\n\t\t{type: 'Name', name: 'Name'},\n\t\t{type: 'Stars', name: 'Stars'},\n\t\t{type: 'UserRating', name: 'Average Rating'},\n\t\t{type: 'MinCost', name: 'Minimum Cost'}\n\t];\n\tvm.resultLimits = [10, 20, 50, 100, 200];\n\n\tvm.order = function(predicate) {\n\t\tvm.reverse = (vm.predicate === predicate) ? !vm.reverse : false;\n\t\tvm.predicate = predicate;\n\t};\n}\nHotelsController.$inject = ['$http', '$filter', '$timeout'];\n})();"]}